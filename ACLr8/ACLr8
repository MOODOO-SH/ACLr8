#!/usr/bin/env python
#
# ACLr8 1.3.1
# by Fletcher Tomalty

try:
	from os import path, popen, system, uname
	import re
	
	version = "1.3.1"
	
	print '\nWelcome to ACLr8 version {0}.'.format(version)
	print 'When entering your password, it is normal for no characters to appear.'
	print 'Press Ctrl-C to stop the program at any time.\n'
	
	if uname()[0] != 'Darwin':
		print 'Sorry, MacOS X is required.\n'
		exit(-1)
	
	if not path.isfile('/usr/sbin/diskutil'):
		print 'Sorry, the "diskutil" binary could not be found.\n'
		exit(-1)
	
	should_repair = raw_input('Would you like to repair permissions while reading them? (y/n)  ')
	while True:
		should_repair = should_repair.lower().strip(' \n\t\r\0')
		if should_repair == 'y':
			print '\nReading and repairing permission errors... (this can take a very long time)'
			permissions_report = popen('sudo diskutil repairPermissions /').read()
			break
		elif should_repair == 'n':
			print '\nReading permission errors... (this can take a very long time)'
			permissions_report = popen('sudo diskutil verifyPermissions /').read()
			break
		else:
			should_repair = raw_input('Please specify either "y" or "n" and press enter...  ')
	print 'done.\n'
	
	print 'Creating unexpected ACL database...'
	permissions_report_lines = permissions_report.split('\n')
	files_with_unexpected_ACL = []
	for line in permissions_report_lines:
		line = line.strip()
		match = re.compile('^ACL found but not expected on "(.*)"\.?$').search(line)
		
		if match is not None:
			file_path = match.group(1)
			
			# For filenames with '"' in them, escape for the command line, as DU does not do this.
			file_path = file_path.replace('"', '\\"')
			
			file_path = '"/' + file_path + '"'
			files_with_unexpected_ACL.append(file_path)
	
	
	print 'done. There {0} files with unexpected ACL.\n'.format(
		{0: 'were no', 1: 'was one'}.get(len(files_with_unexpected_ACL)) or 'were {0}'.format(len(files_with_unexpected_ACL))
	)
	
	if files_with_unexpected_ACL:
		print 'Removing ACL from all files in the database...'
		for file in files_with_unexpected_ACL:
			system('sudo chmod -h -N ' + file)
		print 'done.'
		
	print '\nFinished! The ACL repair completed successfully.'
except SystemExit:
	pass
except KeyboardInterrupt:
	print '\n\nYou have manually terminated the program.'
